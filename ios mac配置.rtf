{\rtf1\ansi\ansicpg936\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fswiss\fcharset0 Helvetica;\f4\fswiss\fcharset0 Helvetica-Bold;\f5\fswiss\fcharset0 Helvetica-Oblique;
\f6\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red57\green0\blue160;
\red92\green38\blue153;\red155\green35\blue147;\red28\green0\blue207;\red0\green0\blue109;\red82\green0\blue103;
\red15\green112\blue3;\red0\green0\blue254;\red109\green109\blue109;\red0\green0\blue0;\red255\green255\blue255;
\red10\green77\blue204;\red27\green31\blue34;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c22454\c0\c62803;
\csgenericrgb\c35922\c14825\c60191;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c0\c0\c42745;\csgenericrgb\c32157\c0\c40392;
\csgenericrgb\c5882\c43922\c1176;\csgenericrgb\c0\c0\c99608;\csgenericrgb\c42745\c42745\c42745;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;
\cssrgb\c1176\c40000\c83922;\cssrgb\c14118\c16078\c18039;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18720\viewh8400\viewkind0
\deftab296
\pard\tx296\pardeftab296\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3     Ios
\f1 \'bd\'d8\'cd\'bc\'d0\'de\'b8\'c4
\f0 \
\
		success = [rendered \cf4 drawViewHierarchyInRect\cf2 :(\cf5 CGRect\cf2 )\{\cf5 CGPointZero\cf2 , size\} \cf4 afterScreenUpdates\cf2 :
\f2\b \cf6 YES
\f0\b0 \cf2 ];\
    
\f2\b \cf6 if
\f0\b0 \cf2 (size.\cf5 height\cf2 /size.\cf5 width\cf2 >\cf7 10\cf2 )\
    \{\
      [rendered.\cf5 layer\cf2  \cf4 renderInContext\cf2 : \cf4 UIGraphicsGetCurrentContext\cf2 ()];\
    \}\
\
    \cf5 UIImage\cf2  *image = \cf4 UIGraphicsGetImageFromCurrentImageContext\cf2 ();\
    \cf4 UIGraphicsEndImageContext\cf2 ();\
\
\
\
\
		android
\f1 \'bd\'d8\'cd\'bc\'d0\'de\'b8\'c4
\f0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab296\pardirnatural\partightenfactor0

\f3 \cf0 \cb1 \

\f4\b \cf8 if
\f3\b0 \cf0 (
\f4\b \cf9 snapshotContentContainer
\f3\b0 \cf0 )\
\{\
    
\f4\b \cf8 try
\f3\b0 \cf0 \{\
        ReactScrollView r = (ReactScrollView)view;\
        r.setOverflow(
\f4\b \cf10 "visible"
\f3\b0 \cf0 );\
        view.draw(c);\
        r.setOverflow(
\f4\b \cf10 "scroll"
\f3\b0 \cf0 );\
    \}\
    
\f4\b \cf8 catch 
\f3\b0 \cf0 (Exception e)\
    \{\
\
    \}\
\}\

\f4\b \cf8 else\

\f3\b0 \cf0 \{\
    view.draw(c);\
\}\
\
	android 
\f1 \'ce\'a2\'d0\'c5\'d0\'de\'b8\'c4
\f3 \
\

\f4\b \cf8 private void 
\f3\b0 \cf0 _getImage(Uri uri, 
\f4\b \cf8 final 
\f3\b0 \cf0 ImageCallback imageCallback) \{\
    
\f4\b \cf8 int 
\f3\b0 \cf0 maxBytes = \cf11 1024 \cf0 * \cf11 1024 \cf0 * \cf11 10\cf0 ;\
    String fileUri = uri.toString();\
    
\f4\b \cf8 if 
\f3\b0 \cf0 (fileUri.startsWith(
\f4\b \cf10 "file://"
\f3\b0 \cf0 )) \{\
        fileUri = fileUri.replace(
\f4\b \cf10 "file://"
\f3\b0 \cf0 , 
\f4\b \cf10 ""
\f3\b0 \cf0 );\
        
\f5\i \cf12 //Log.d("file", fileUri);\
    
\f3\i0 \cf0 \}\
    Bitmap bitmap = BitmapFactory.
\f5\i decodeFile
\f3\i0 (fileUri);\
\
    
\f4\b \cf8 while 
\f3\b0 \cf0 (bitmap.getByteCount() > maxBytes) \{\
        Matrix matrix = 
\f4\b \cf8 new 
\f3\b0 \cf0 Matrix();\
        matrix.postScale(\cf11 0.95f\cf0 , \cf11 0.95f\cf0 );\
        Bitmap resizeBitmap = Bitmap.
\f5\i createBitmap
\f3\i0 (bitmap, \cf11 0\cf0 , \cf11 0\cf0 , bitmap.getWidth(), bitmap\
                .getHeight(), matrix, 
\f4\b \cf8 true
\f3\b0 \cf0 );\
\
        bitmap.recycle();\
        bitmap = resizeBitmap;\
    \}\
\
    imageCallback.invoke(bitmap);\
\}\
\
\
\
React-native \
\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth13540\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt300 \clpadl300 \clpadb300 \clpadr300 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420\partightenfactor0

\f6\fs28 \cf13 \cb14 \expnd0\expndtw0\kerning0
node_modules/@ant-design/react-native/lib/tabs/Tabs.js 
\f1 \'d4\'b4\'c2\'eb\'d6\'d0
\f6 page94
\f1 \'d0\'d0\'b4\'fa\'c2\'eb\'d6\'d0
\f6  ViewPagerAndroid 
\f1 \'b1\'ea\'c7\'a9\'b5\'bc\'d6\'c2
\f6  
\f1 \'b8\'fc\'b8\'c4\'d4\'b4\'c2\'eb\'d4\'f6\'bc\'d3\'c5\'d0\'b6\'cf
\f6  
\f1 \'bb\'f2\'d5\'df\'d7\'a2\'ca\'cd\'b5\'f4\'d5\'fb\'b8\'f6
\f6 if
\f1 \'cc\'f5\'bc\'fe\'c5\'d0\'b6\'cf\'a3\'a8
\f6 page92-111
\f1 \'a3\'a9\'d2\'d4\'cf\'c2\'b4\'fa\'c2\'eb\'a3\'ba
\f6 \cb1 \uc0\u8232 \cb14 if (_reactNative.Platform.OS === 'android') \{\cb1 \uc0\u8232 \cb14 return _react2['default'].createElement(\cb1 \uc0\u8232 \cb14 _reactNative.ViewPagerAndroid,\cb1 \uc0\u8232 \cb14 \{ key: '$content', keyboardDismissMode: 'on-drag', initialPage: currentTab, scrollEnabled: _this.props.swipeable || usePaged, onPageScroll: function onPageScroll(e) \{\cb1 \uc0\u8232 \cb14 _this.state.scrollX.setValue(e.nativeEvent.position * _this.state.containerWidth);\cb1 \uc0\u8232 \cb14 \}, style: \{ flex: 1 \}, onPageSelected: function onPageSelected(e) \{\cb1 \uc0\u8232 \cb14 var index = e.nativeEvent.position;\cb1 \uc0\u8232 \cb14 _this.setState(\{\cb1 \uc0\u8232 \cb14 currentTab: index\cb1 \uc0\u8232 \cb14 \}, function () \{\cb1 \uc0\u8232 \cb14 // tslint:disable-next-line:no-unused-expression\cb1 \uc0\u8232 \cb14 _this.props.onChange && _this.props.onChange(tabs[index], index);\cb1 \uc0\u8232 \cb14 \});\cb1 \uc0\u8232 \cb14 _this.nextCurrentTab = index;\cb1 \uc0\u8232 \cb14 \}, ref: function ref(_ref) \{\cb1 \uc0\u8232 \cb14 return _this.viewPager = _ref;\cb1 \uc0\u8232 \cb14 \} \},\cb1 \uc0\u8232 \cb14 content\cb1 \uc0\u8232 \cb14 );\cb1 \uc0\u8232 \cb14 \}\cb1 \
\

\f1 \'d0\'c2\'b5\'c4
\f6 wkview
\f1 \'bb\'b9\'d0\'e8\'d2\'aa\'b5\'f7\'d5\'fbandroid\'c4\'a3\'ca\'bd\'cf\'c2webview\'b5\'c4\'d2\'fd\'d3\'c3\'a3\'ac\'d2\'aa\'b5\'c8\'b8\'fc\'d0\'c2\'c1\'cb
\f6 \cf15 \cell \lastrow\row
\pard\pardeftab720\sl360\partightenfactor0
\cf15 \cb14 \'a0\cb1 \
\pard\pardeftab720\sl340\partightenfactor0
\cf16 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab296\pardirnatural\partightenfactor0

\f3\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab296\pardirnatural\partightenfactor0
\cf0 \
}